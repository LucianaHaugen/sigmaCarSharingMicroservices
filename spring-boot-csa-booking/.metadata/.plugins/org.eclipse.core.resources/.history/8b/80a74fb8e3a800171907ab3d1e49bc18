package com.sigmatechnology.csa.entity;

import java.util.Arrays;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonRootName;

/**
 * Created by lucianahaugen on 31/08/17.
 */

@Entity
public class User {

	@Id
	@Column(name = "user_id")
    @GeneratedValue(strategy=GenerationType.AUTO)
    private Long id;
	@Column(name = "user_name")
    private String userName;
	@JsonIgnore
    private String password;
    @Column(name = "is_approved")
    private boolean isApproved;
    @Column(name = "total_bookings_year")
    private Integer totalBookingsYear;
    @Column(name = "total_distance_year")
    private Double totalDistanceYear;
    private byte[] userImage;   
    @Transient
    private Boolean isWithinBookingTimeLimit;
    @Transient
    private Boolean isWithinBoookingDistanceLimit;
       
    
	public User() {
		
	}

	

	public User(Long id, String userName, String password, boolean isApproved, Integer totalBookingsYear,
			Double totalDistanceYear, byte[] userImage) {
		super();
		this.id = id;
		this.userName = userName;
		this.password = password;
		this.isApproved = isApproved;
		this.totalBookingsYear = totalBookingsYear;
		this.totalDistanceYear = totalDistanceYear;
		this.userImage = userImage;
		this.isWithinBookingTimeLimit = (totalBookingsYear < BookingRegulations.MAX_BOOKINGS_YEAR.getMaxBookingYear());
		this.isWithingBoookingDistanceLimit = (totalDistanceYear < BookingRegulations.MAX_DISTANCE_YEAR.getMaxDistanceYear());
		
	}



	public Long getUserId() {
		return id;
	}

	public void setUserId(Long userId) {
		this.id = userId;
	}

	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public boolean isApproved() {
		return isApproved;
	}

	public void setApproved(boolean isApproved) {
		this.isApproved = isApproved;
	}

	public Integer getTotalBookingsYear() {
		return totalBookingsYear;
	}

	public void setTotalBookingsYear(Integer totalBookingsYear) {
		this.totalBookingsYear = totalBookingsYear;
	}

	public Double getTotalDistanceYear() {
		return totalDistanceYear;
	}

	public void setTotalDistanceYear(Double totalDistanceYear) {
		this.totalDistanceYear = totalDistanceYear;
	}

	

	public byte[] getUserImage() {
		return userImage;
	}

	public void setUserImage(byte[] userImage) {
		this.userImage = userImage;
	}
	
	@Transient
	public Boolean getIsWithinBookingTimeLimit() {
		return isWithinBookingTimeLimit;
	}
	@Transient
	public Boolean getIsWithingBoookingDistanceLimit() {
		return isWithingBoookingDistanceLimit;
	}



	@Override
	public String toString() {
		return "User [id=" + id + ", userName=" + userName + ", password=" + password + ", isApproved=" + isApproved
				+ ", totalBookingsYear=" + totalBookingsYear + ", totalDistanceYear=" + totalDistanceYear
				+ ", userImage=" + Arrays.toString(userImage) + ", isWithinBookingTimeLimit=" + isWithinBookingTimeLimit
				+ ", isWithingBoookingDistanceLimit=" + isWithingBoookingDistanceLimit + "]";
	}

	
	
    
    
    
}
